--Total trips: Members vs Casual, Proportion of each user type

SELECT
  COUNT(ride_id) AS Total_trips,
  SUM(CASE WHEN member_casual = 'member' THEN 1 ELSE 0 END) AS Total_member_trips,
  SUM(CASE WHEN member_casual = 'casual' THEN 1 ELSE 0 END) AS Total_casual_trips,
  ROUND(SUM(CASE WHEN member_casual = 'member' THEN 1 ELSE 0 END) * 100 / COUNT(ride_id), 2) AS MemberPercentage,
  ROUND(SUM(CASE WHEN member_casual = 'casual' THEN 1 ELSE 0 END) * 100/ COUNT(ride_id), 2) AS CasualPercentage
FROM `2023biketrips`;


--Ride length distribution(in minute): Members vs Casual

SELECT
    a.member_casual,
    a.Avg_RideLength,
    a.Max_RideLength,
    a.Min_RideLength,
    q.quantiles[OFFSET(1)] AS Percentile_25,
    q.quantiles[OFFSET(2)] AS Median,
    q.quantiles[OFFSET(3)] AS Percentile_75
FROM
    Aggregates a
JOIN
    Quantiles q
ON
    a.member_casual = q.member_casual



--Rides counts and duration by bike types

SELECT
  member_casual,
  rideable_type,
  COUNT(*) AS rides_count,
  ROUND(AVG(ride_length),2) AS avg_ride_length_mins

FROM`2023biketrips`
GROUP BY member_casual, rideable_type
ORDER BY rides_count DESC


--Rides by month: member vs casual
SELECT
    member_casual,
    EXTRACT(MONTH FROM ride_date) AS month,
    COUNT(*) AS ride_count,
    ROUND(AVG(ride_length),2) AS avg_ride_duration
FROM `2023biketrips`
  WHERE member_casual = 'member'
  GROUP BY member_casual, month 
  ORDER BY month 


--Rides by day and hour

SELECT  
  member_casual,
  day_of_week,
  EXTRACT(HOUR FROM started_at) AS hour,
  COUNT(*) AS ride_count
FROM `2023biketrips`
WHERE member_casual = 'member'
GROUP BY member_casual,day_of_week,hour 
ORDER BY ride_count DESC;

--Rides by Day and Ride Counts

WITH RideCounts AS(
  SELECT 
    member_casual,
    day_of_week,
    COUNT(*) AS ride_count,
    ROUND(AVG(ride_length),2) AS ride_length
  FROM `2023biketrips`
  GROUP BY member_casual,day_of_week
),

RankedDays AS (
    SELECT
        member_casual,
        day_of_week,
        ride_count,
        ROW_NUMBER() OVER (PARTITION BY member_casual ORDER BY ride_count DESC) AS num_rank,
        ride_length
    FROM
        RideCounts
)

SELECT
  num_rank,
  member_casual,
  day_of_week,
  ride_count,
  ride_length
FROM RankedDays

--The most popular start sation:

SELECT 
  member_casual,
  start_station_name, 
  COUNT(ride_id) AS total_trips
FROM `2023biketrips`
WHERE member_casual = 'member'
GROUP BY member_casual, start_station_name
ORDER BY total_trips DESC LIMIT 10;













