--Total trips: Members vs Casual, Proportion of each user type

SELECT
  COUNT(ride_id) AS Total_trips,
  SUM(CASE WHEN member_casual = 'member' THEN 1 ELSE 0 END) AS Total_member_trips,
  SUM(CASE WHEN member_casual = 'casual' THEN 1 ELSE 0 END) AS Total_casual_trips,
  ROUND(SUM(CASE WHEN member_casual = 'member' THEN 1 ELSE 0 END) * 100 / COUNT(ride_id), 2) AS MemberPercentage,
  ROUND(SUM(CASE WHEN member_casual = 'casual' THEN 1 ELSE 0 END) * 100/ COUNT(ride_id), 2) AS CasualPercentage
FROM `2023biketrips`;

--Average ride lengths: Members vs Casual

SELECT  
 AVG(ride_length) AS AvgRidelength_Total,
 AVG(CASE WHEN member_casual = 'member' THEN ride_length END) AS Avg_RideLength_Member,
 AVG(CASE WHEN member_casual = 'casual' THEN ride_length END) AS Avg_RideLength_Casual,

FROM `project-1-429715.cyclistic_tripdata.2023biketrips_cleaned_nonull` 



--The most frequent riding day:

WITH RideCounts AS(
  SELECT 
    member_casual,
    day_of_week,
    COUNT(*) AS ride_count,
  FROM `project-1-429715.cyclistic_tripdata.2023biketrips_cleaned_nonull`
  GROUP BY member_casual,day_of_week
),

RankedDays AS (
    SELECT
        member_casual,
        day_of_week,
        ride_count,
        ROW_NUMBER() OVER (PARTITION BY member_casual ORDER BY ride_count DESC) AS Row_number
    FROM
        RideCounts
)

SELECT
  member_casual,
  day_of_week,
  ride_count
FROM RankedDays
WHERE ROW_NUMBER = 1


--ride length distribution(in minute): Members vs Casual

```WITH Quantiles AS (
    SELECT
        member_casual,
        APPROX_QUANTILES(ride_length, 4) AS quantiles
    FROM
        `2023biketrips`
    GROUP BY
        member_casual
),

Aggregates AS (
    SELECT
        member_casual,
        AVG(ride_length) AS Avg_RideLength,
        MAX(ride_length) AS Max_RideLength,
        MIN(ride_length) AS Min_RideLength
    FROM
        `2023biketrips`
    GROUP BY
        member_casual
)

SELECT
    a.member_casual,
    a.Avg_RideLength,
    a.Max_RideLength,
    a.Min_RideLength,
    q.quantiles[OFFSET(1)] AS Percentile_25,
    q.quantiles[OFFSET(2)] AS Median,
    q.quantiles[OFFSET(3)] AS Percentile_75
FROM
    Aggregates a
JOIN
    Quantiles q
ON
    a.member_casual = q.member_casual```









--Count of Rides and Total Ride Duration by Rideable Type
```
SELECT
  member_casual,
  rideable_type,
  COUNT(*) AS rides_count,
  ROUND(AVG(ride_length),2) AS avg_ride_length_mins

FROM`project-1-429715.cyclistic_tripdata.2023biketrips_cleaned_nonull`
GROUP BY member_casual, rideable_type
ORDER BY rides_count DESC```




--Rides by hour and day
```WITH RideCounts AS(
  SELECT
    member_casual,
    day_of_week,
    EXTRACT(HOUR FROM started_at) AS hour,
    COUNT(*) AS ride_count
  FROM `project-1-429715.cyclistic_tripdata.2023biketrips_cleaned_nonull`
  GROUP BY member_casual,day_of_week,Hour
),
RankedHour AS(
  SELECT  
    member_casual,
    day_of_week,
    hour,
    ride_count,
    ROW_NUMBER() OVER(PARTITION BY member_casual ORDER BY ride_count DESC) AS num_rank
  FROM RideCounts
)
SELECT
  num_rank,
  member_casual,
  day_of_week,
  hour,
  ride_count
FROM RankedHour
ORDER BY num_rank```
